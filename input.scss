@use "sass:map";
@use "sass:math";
@use "config";
@import "ressources";



html {
    overflow-x: hidden;
    font-size: config.$defaultfontsize;
    font-family: config.$fontfamily;

    input {
        font-family: 'lato', sans-serif;
    }
}

body {
    margin: 0;
    overflow-x: hidden;
}

@each $name,
$ratio in config.$fontsize {
    #{$name} {
        font-size: (map.get(config.$fontsizescreen, "smartphone") * $ratio);
    }
}

h1,
h2,
h3 {
    text-transform: uppercase;
}

h1 {
    padding: 0.2em 0;

    font-weight: map.get(config.$fontweight, "x-large");
    letter-spacing: 4px;

    width: fit-content;
    border-top: 7px double config.$primary;
    border-bottom: 7px double config.$primary;



}

h2,
h3 {
    letter-spacing: 1.5px;
    line-height: 1.4em;
}

p {
    letter-spacing: 1px;
    line-height: 1.4em;
}



p,
h2,
h3 {
    font-weight: lighter;
}

a {
    text-decoration: underline;
    text-decoration-style: dotted;
    transition: config.$transitionhref;

    &:hover {
        text-decoration-color: rgb(0, 0, 0, 0);
        cursor: pointer;
    }
}

.main {
    left: 0;

    position: relative;

    transition: config.$transitionnavbar;

}


.buttonnavbar {
    top: 1em;
    left: 1em;
    position: absolute;

    height: 2.5em;
    width: 3.5em;

    padding: 1em;

    color: config.$primary;
    background-color: rgba(config.$secondary, 0.8);

    border-radius: 3px;
    border: 0;

    transition: config.$transitionnavbar;
}

.buttonnavbaricon {
    position: absolute;
    top: 0.5rem;
    left: 1rem;

    width: 0.9rem;

    fill: config.$primary;
}

.buttonnavbarcontainer {
    position: fixed;
}

.sidenav {
    width: config.$sidenavwidth;
    left: config.$sidenavwidth * -1;

    background-color: config.$fifth;
    height: 110%;
    position: fixed;
    top: -3.56em;

    transition: config.$transitionnavbar;

    ul {
        list-style-type: none;
        padding-left: 1em;


    }



    li {
        // padding: 0.5em;


        &::before {

            content: '';

            left: 1em;

            position: absolute;
            width: 90%;
            border-bottom: 1px solid config.$primary;
            opacity: 0.1;
        }

    }

    >ul>li>a {
        font-weight: map.get(config.$fontweight, "x-large");
    }

    a {
        font-size: 0.9em;
        font-weight: 100;


        color: config.$secondarylightbutnotthatmuch;
        text-decoration: none;

        height: 2.8em;
        display: flex;
        align-items: center;

        transition: config.$transitionnavbar;

    }

    .homebutton {
        visibility: hidden;
    }

}



.headercontainer {
    @include backgroundstyle("smartphone", "light", false, true, true, true);
    @extend %flex-center-column;
    padding: map.get(config.$padding, "large") map.get(config.$padding, "medium");
}

.header {
    opacity: 0;
    @extend %flex-center-column;

    transition: config.$transitionheader;

    h1,
    h3 {
        cursor: default;
    }
}

.headercontainer,
.coloredsection,
.prefooter {
    color: config.$tertiary;
}

.intro,
.checkmarksection,
.articlesection,
.footer {
    color: config.$secondary;
}


.line-decoration {
    @extend %flex-center-row;

    padding-top: map.get(config.$padding, "medium");

    width: 100%;

    // height: 10vh;

    &::before,
    &::after {
        display: inline-block;
        border-top: 1px solid config.$secondarylight;
        border-bottom: 1px solid config.$secondarylight;
        height: 0.3rem;
        content: '';
        width: 100%;

        opacity: 0.5;

    }

    i {
        margin: 0 2rem;

        font-size: 3em;

        color: config.$secondarylight;
    }

}

.intro {
    @extend %flex-center-column;
    padding: map.get(config.$padding, "medium") map.get(config.$padding, "thin");
    padding-top: map.get(config.$padding, "x-thin");

    a {
        color: config.$quaternay ;
    }
}

.sectioncontainer {
    @include backgroundstyle("smartphone", "dark", true, false, false, false);
    background-color: config.$primary;
}

.coloredsection,
.checkmarksection,
.articlesection {
    p {
        text-align: justify;
    }
}

.coloredsection,
.checkmarksection,
.articlesection,
.prefooter,
.footer {
    @extend %flex-center-column;
    padding: map.get(config.$padding, "medium") map.get(config.$padding, "thin");

}



.coloredsection {
    background-color: config.$quaternay;
}

.imgcoloredsection {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
}

.prefooter {
    @include backgroundstyle("smartphone", "light", true, false, true, true);
}


.articlesection {
    background-color: config.$tertiary;

    .article {
        margin: 3em 0;
    }

    img {
        width: 100%;
    }

    h2 {
        margin: 0;
    }
}

.coloredsection,
.checkmarksection {
    div {
        margin: map.get(config.$padding, "thin") 0;
    }

}

.checkmarksection i {
    color: config.$secondarylight;

    font-size: 5em;
}

.coloredsection {
    svg {
        fill: config.$quaternarylight;
        width: 5em;
        margin: 0.5em;
    }

    div {
        margin: 0;
    }
}

// button($name, $background color , $border color , $text color, background color on hover )
@include button("tertiary", rgba(config.$tertiary, 0), config.$tertiary , config.$tertiary , rgba(config.$tertiary, 0.1));
@include button("secondary", rgba(config.$secondary, 0), config.$secondary , config.$secondary , rgba(config.$secondary, 0.1));
@include button("quaternary", rgba(config.$quaternay, 1), config.$quaternay , config.$primary , config.$quaternay );
@include button("header", rgba(config.$tertiary, 0), config.$tertiary , config.$tertiary , rgba(config.$tertiary, 0.1));


.button-quaternary:hover {
    filter: brightness(1.075);
}

.button-header {
    max-width: 13.5rem;
}


.footer {
    background-color: config.$primary;

    input {
        margin: 0.2rem;
        width: 2.5rem;

        transition: config.$transitionsocial;

        &:hover {
            -webkit-transform: translateY(-3px);
            transform: translateY(-3px);
            filter: brightness(115%);
        }
    }

    p {
        font-size: 0.9em;
        line-height: 1em;
    }
}




@media screen and (min-width: 769px) {



    @each $name,
    $ratio in config.$fontsize {
        #{$name} {
            font-size: (map.get(config.$fontsizescreen, "desktop") * $ratio);
        }

    }

    body {
        background-image: config.$imgbanner;
        background-size: cover;
        background-attachment: fixed;
    }

    h1 {
        font-size: 3.4em;
        letter-spacing: 8px;
    }



    .sidenav {

        position: absolute;

        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;

        height: 10%;

        top: 0;
        left: 0;
        width: 100%;

        background-color: rgba(0, 0, 0, 0);




        >ul {
            display: flex;
            flex-direction: row;



            padding-right: 2em;
        }

        >ul>li {
            margin: 0 1em;
        }

        >ul>ul {
            position: absolute;
            top: 4em;
            right: 4em;

            visibility: hidden;

            background-color: config.$primary;

        }

        >ul>ul>ul {
            position: absolute;
            visibility: hidden;
        }


        li::before {
            display: none;
        }

        .homebutton {
            visibility: visible;
            padding-left: 2em;
            text-transform: uppercase;

        }

        ul,
        a {
            transition: config.$transitionnavbar;
        }

    }

    .buttonnavbarcontainer {
        display: none;
    }

    .main {
        position: static;
    }




    .headercontainer {
        @include backgroundstyle("desktop", "light", false, true, false, true);
    }

    .header {
        padding: map.get(config.$padding, "medium") map.get(config.$padding, "medium");

        background-color: rgba(34, 8, 0, 0.4);

        width: 20em;
    }

    .sectioncontainer {
        @include backgroundstyle("desktop", "dark", true, true, false, false);
        padding: map.get(config.$padding, "large") map.get(config.$padding, "xx-large");
    }

    .intro {
        padding: map.get(config.$padding, "medium") map.get(config.$padding, "xx-large");
    }

    .coloredsection {
        @include backgroundstyle("desktop", "light", false, true, false, false);
        flex-direction: row-reverse;


        svg {
            width: 7em;
            padding: 0.5em;
        }

    }

    .coloredsectiontext {
        min-width: 65%;
        max-width: 65%;
        text-align: left;
    }

    .checkmarksection {
        flex-direction: row;

        p {
            text-align: center;
        }

        div {
            margin: map.get(config.$padding, "thin") 0;
        }

        i {
            font-size: 7em;
        }
    }

    .prefooter,
    .footer,
    .coloredsection,
    .articlesection {
        padding: map.get(config.$padding, "large") map.get(config.$padding, "large");

    }

    .containerarticle {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-around;

        p {
            text-align: center;
        }

        div {
            width: 45%;
        }
    }

    .prefooter {
        @include backgroundstyle("desktop", "light", true, false, false, true);
    }

    .footer p {
        font-size: 1em;
    }

    .footer {
        input {
            width: 4em;
        }
    }

    .dottedpipe::after {
        content: "";
        height: 10.5rem;
        border-right: 1px dotted config.$secondary;
        margin: 1rem;
    }

    .container {
        display: flex;
        justify-content: center;
        width: 100%;
        flex-direction: row;
    }

}